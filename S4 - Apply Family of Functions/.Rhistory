#ex2
q + geom_point(aes(colour=BudgetMillions))
#q remains the same
q + geom_point()
#ex3
q + geom_point(aes(x=BudgetMillions)) +
xlab("Budget Millions $$$")
#Budget does not really affect rating
#ex4
q + geom_line() + geom_point()
#reduce line size (no need for aes() as
#this is setting aes not mapping aes)
q + geom_line(size=1) + geom_point()
#------------------------------- Mapping vs Setting
r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()
#add colour
#1. Mapping (what we've done so far)
r + geom_point(aes(colour=Genre))
#2. Setting
r + geom_point(colour="DarkGreen")
#ERROR:
#r + geom_point(aes(colour="DarkGreen"))
#you are mapping colour to "DarkGreen" variable
#you MAP VARIABLES using aes() and SET ACTUAL VALUES
#1. Mapping
r + geom_point(aes(size=BudgetMillions))
#2. Setting
r + geom_point(size=10)
#ERROR:
#r + geom_point(aes(size=10))
s <- ggplot(data=movies, aes(x=BudgetMillions))
s + geom_histogram(binwidth=10)
s + geom_histogram(binwidth=10, fill="Green")
s + geom_histogram(binwidth=10, aes(fill=Genre))
s + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
s + geom_density()
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
t <- ggplot(data=movies, aes(x=AudienceRating))
t + geom_histogram(binwidth=10,
fill="White", colour="Blue")
t <- ggplot(data=movies)
t + geom_histogram(binwidth=10,
aes(x=AudienceRating),
fill="White", colour="Blue")
aes(x=CriticRating),
t + geom_histogram(binwidth=10,
aes(x=CriticRating),
fill="White", colour="Blue")
read.csv("Section6-Homework-Data")
s6data <- read.csv("Section6-Homework-Data.csv")
head(s6data)
s6data <- read.csv("Section6-Homework-Data.csv")
head(s6data)
?geom_boxplot
str(s6data)
summary(s6data)
ggplot(data=s6data) + geom_boxplot(aes(x=Genre, y=Gross % US))
ggplot(data=s6data) + geom_boxplot(aes(x=Genre, y="Gross % US"))
mov <- read.csv("Section6-Homework-Data.csv")
head(mov) #top rows
str(mov) #structure of the dataset
library(ggplot2)
ggplot(data=mov, aes(x=Day.of.Week)) + geom_bar()
filt <- (mov$Genre == "action") | (mov$Genre == "adventure") | (mov$Genre == "animation") | (mov$Genre == "comedy") | (mov$Genre == "drama")
filt2 <- (mov$Studio == "Buena Vista Studios") | (mov$Studio == "WB") | (mov$Studio == "Fox") | (mov$Studio == "Universal") | (mov$Studio == "Sony") | (mov$Studio == "Paramount Pictures")
mov2 <- mov[filt & filt2,]
summary(mov) #column summaries
str(mov2)
str(mov2)
summary(mov2)
p <- ggplot(data=mov2, aes(x=Genre, y=Gross % US))
p <- ggplot(data=mov2, aes(x=Genre, y="Gross % US"))
p #Nothing happens. We need a geom.
geom_point()
p +
geom_point()
nstead of the points
p +
geom_boxplot()
p +
geom_boxplot()
p <- ggplot(data=mov2, aes(x=Genre, y=Gross...US))
p #Nothing happens. We need a geom.
p +
p +
geom_point()
p +
geom_point()
p +
geom_boxplot()
p +
geom_boxplot() +
geom_point()
p +
geom_boxplot() +
geom_jitter()
p +
geom_jitter() +
geom_boxplot()
p +
geom_jitter() +
geom_boxplot(alpha=0.7)
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha=0.7)
p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q <- p +
geom_jitter(aes(size=Budget...mill., colour=Studio)) +
geom_boxplot(alpha = 0.7, outlier.colour = NA)
q
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
main("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
main.title("Domestic Gross % by Genre") #plot title
q <- q +
xlab("Genre") + #x axis title
ylab("Gross % US") + #y axis title
ggtitle("Domestic Gross % by Genre") #plot title
q
q <- q +
theme(
#this is a shortcut to alter ALL text elements at once:
text = element_text(family="Comic Sans MS"),
#Axes titles:
axis.title.x = element_text(colour="Blue", size=30),
axis.title.y = element_text(colour="Blue", size=30),
#Axes texts:
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
#Plot title:
plot.title = element_text(colour="Black",
size=40),
#Legend title:
legend.title = element_text(size=20),
#Legend text
legend.text = element_text(size=12)
)
q
q$labels$size = "Budget $M"
q
getwd()
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/HR Master 2016.csv")
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
str(df)
leaver_df <- df[df$FT.Turnover.Indicator = 1]
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
leaver_df
head(leaver_df)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
str(df)
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
head(leaver_df)
ggplot(data=leaver_df, x=Month, y=FT Turnover Indicator) + geom_hist()
ggplot(data=leaver_df, x=Month, y="FT Turnover Indicator") + geom_hist()
library(ggplot2)
ggplot(data=leaver_df, x=Month, y=FT Turnover Indicator) + geom_hist()
ggplot(data=leaver_df, x=Month, y=FT Turnover Indicator) + geom_histogram()
ggplot(data=leaver_df, x=Month, y=FT.Turnover.Indicator) + geom_histogram()
ggplot(data=leaver_df, x=Month, y=FT.Turnover.Indicator) + geom_point()
ggplot(data=leaver_df) + geom_point(x=Month, y=FT.Turnover.Indicator)
head(leaver_df)
ggplot(data=leaver_df) + geom_point(aes(x=Month, y=FT.Turnover.Indicator)
ggplot(data=leaver_df, aes(x=Month)) + geom_histogram()
ggplot(data=leaver_df, aes(x=Month)) + geom_histogram()
ggplot(data=leaver_df, aes(x=Month)) + geom_histogram(stat="count")
ggplot(data=leaver_df, aes(x=Month)) + geom_histogram(binwidth=1, stat="count")
ggplot(data=leaver_df, aes(x=Lazada.Location)) + geom_histogram()
ggplot(data=leaver_df, aes(x=Lazada.Location)) + geom_histogram(binwidth = 1)
ggplot(data=leaver_df, aes(x=Lazada.Location)) + geom_histogram(stat="count", binwidth = 1)
ggplot(data=leaver_df, aes(x=Lazada.Location)) + geom_histogram(stat="count")
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_histogram(binwidth=10)
a + geom_point()
a + geom_point(aes(y=Lazada.Location))
a + geom_bar(aes(y=Lazada.Location))
a + geom_bar()
a + geom_bar(aes(colour=Lazada.Location))
a + geom_bar(aes(fill=Lazada.Location))
a + geom_bar(aes(fill=Lazada.Location), colour="Black")
a + geom_bar(aes(fill=Gender), colour="Black")
+ facet_wrap(~ Lazada.Location)
+ facet_wrap(~ Gender)
a + geom_bar(aes(fill=Gender), colour="Black")
+ facet_wrap(~ Gender)
a + geom_bar(aes(fill=Gender), colour="Black")
+ facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location)
leaver_df <- df[df$c(FT.Turnover.Indicator == 1, Termination Type == "Voluntary"),]
leaver_df <- df[c(df$FT.Turnover.Indicator == 1, df$Termination Type == "Voluntary"),]
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Gender), colour="Black"), x=Month, y=FT.Turnover.Indicator) +
facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender), colour="Black"), x=Month, y=FT.Turnover.Indicator) +
facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender), colour="Black", x=Month, y=FT.Turnover.Indicator) +
facet_wrap(~ Division)
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
head(leaver_df)
library(ggplot2)
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Gender), colour="Black", x=Month, y=FT.Turnover.Indicator) +
facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender,y=FT.Turnover.Indicator), colour="Black") +
facet_wrap(~ Division)
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
str(df)
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
head(leaver_df)
library(ggplot2)
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Gender), colour="Black") +
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
str(df)
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
head(leaver_df)
library(ggplot2)
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location)
a + geom_bar(aes(fill=Gender), colour="Black") +
facet_wrap(~ Lazada.Location) +
theme(axis.text.x = element_text(angle=90, hjust=1))
a + geom_bar(aes(fill=Termination.Type), colour="Black") +
facet_wrap(~ Lazada.Location) +
theme(axis.text.x = element_text(angle=90, hjust=1))
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
leaver_df <- df[df$FT.Turnover.Indicator == 1,]
a <- ggplot(data=leaver_df, aes(x=Month))
a + geom_bar(aes(fill=Termination.Type), colour="Black") +
facet_wrap(~ Lazada.Location) +
theme(axis.text.x = element_text(angle=90, hjust=1))
library(reshape2)
util <- read.csv("Machine-Utilization.csv")
head(util, 10)
str(util)
summary(util)
### Derive Utilization column
util$Utilization = 1 - util$Percent.Idle
head(util,12)
### Handling Date-Times in R
tail(util)
# European date format used
# Portable Operating System Interface (POSIX) - standard for time, date, etc.
# repesented by digits to seconds from the beginning of 1970
?POSIXct
util$PosixTime <- as.POSIXct(util$Timestamp, format="%d/%m/%Y %H:%M")
#capital letters for full format
head(util, 12)
summary(util)
# TIP: How to rearrange columns in a df
util$Timestamp <- NULL
util <- util[, c(4,1,2,3)]
#POSIX Timestamp now moved to first column
util <- read.csv("Machine-Utilization.csv")
getwd()
getwd()
util <- read.csv("Machine-Utilization.csv")
head(util, 10)
str(util)
summary(util)
### Derive Utilization column
util$Utilization = 1 - util$Percent.Idle
head(util,12)
### Handling Date-Times in R
tail(util)
# European date format used
# Portable Operating System Interface (POSIX) - standard for time, date, etc.
# repesented by digits to seconds from the beginning of 1970
?POSIXct
util$PosixTime <- as.POSIXct(util$Timestamp, format="%d/%m/%Y %H:%M")
#capital letters for full format
head(util, 12)
summary(util)
# TIP: How to rearrange columns in a df
util$Timestamp <- NULL
util <- util[, c(4,1,2,3)]
#POSIX Timestamp now moved to first column
summary(util)
RL1 <- util[util$Machine == "RL1", ]
summary(RL1)
RL1$Machine <- factor(RL1$Machine)
summary(RL1)
RL1$Machine <- factor(RL1$Machine)
summary(RL1)
util_stats_rl1 <- c(min(RL1$Utilization, na.rm=TRUE),
mean(RL1$Utilization, na.rm=TRUE),
max(RL1$Utilization, na.rm=TRUE))
util_stats_rl1
RL1$Utilization < 0.90
which(RL1$Utilization < 0.90)
util_under_90 <- length(which(RL1$Utilization < 0.90)) > 0
util_under_90
util_under_90_flag <- length(which(RL1$Utilization < 0.90)) > 0
list_rl1 <- list("RL1", util_stats_rl1, util_under_90_flag)
list_rl1 <- list("RL1", util_stats_rl1, util_under_90_flag)
list_rl1
names(list_rl1)
names(list_rl1) <- c("Machine", "Stats", "Low Threshold")
names(list_rl1)
list_rl1
names(list_rl1) <- c("Machine", "Stats", "LowThreshold")
list_rl1
rm(list_rl1)
list_rl1
list_rl1 <- list(Machine="RL1", Stats=util_stats_rl1, LowThreshold=util_under_90_flag)
list_rl1
list_rl1[1]
list_rl1[[1]]
list_rl1$Machine
typeof(list_rl1[2])
list_rl1[[2]]
typeof(list_rl1[[2]])
list_rl1$Stats
typeof(list_rl1$Stats)
list_rl1[[2]][3]
list_rl1$stats[3]
list_rl1$Stats[3]
list_rl1[4] <- "New Information"
list_rl1
RL1
RL1[is.na(RL1$Utilization), "PosixTime"]
list_rl1$UnknownHours <- RL1[is.na(RL1$Utilization), "PosixTime"]
list_rl1
list_rl1[4] <- NULL
list_rl1
list_rl1$Data <- RL1
list_rl1
summary(list_rl1)
str(list_rl1)
list_rl1$UnknownHours[1]
list_rl1[[4]][1]
list_rl1[1]
list_rl1[1:2]
list_rl1[[2]]
list_rl1[c(1,4)]
sublist_rl1 <- list_rl1[c("Machine","Stats")]
sublist_rl1
sublist_rl1[[2]][2]
library(ggplot2)
p <- ggplot(data=util)
colour=Machine))
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine))
colour=Machine), size=1.2)
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2)
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2) +
facet_grid(Machine~.)
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2) +
facet_grid(Machine~.) +
geom_hline(yintercept = 0.90)
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2) +
facet_grid(Machine~.) +
geom_hline(yintercept = 0.90,
colour="Gray", size=1.2)
p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2) +
facet_grid(Machine~.) +
geom_hline(yintercept = 0.90,
colour="Gray", size=1.2,
linetype=3)
myplot <- p + geom_line(aes(x=PosixTime, y=Utilization,
colour=Machine), size=1.2) +
facet_grid(Machine~.) +
geom_hline(yintercept = 0.90,
colour="Gray", size=1.2,
linetype=3)
list_rl1$Plot <- myplot
list_rl1
list_rl1
summary(list_rl1)
str(list_rl1)
getwd()
setwd("./Advanced/S4 - Apply Family of Functions/")
getwd()
Chicago <- read.csv("Chicago-C.csv", row.names=1)
Chicago
NewYork <- read.csv("NewYork-C.csv", row.names=1)
Houston <- read.csv("Houston-C.csv", row.names=1)
SanFrancisco <- read.csv("SanFrancisco-C.csv", row.names=1)
Chicago
NewYork
Houston
SanFrancisco
is.data.frame(Chicago)
Chicago <- as.matrix(Chicago)
NewYork <- as.matrix(NewYork)
Houston <- as.matrix(Houston)
SanFrancisco <- as.matrix(SanFrancisco)
is.matrix(Chicago)
Weather <- list(Chicago, NewYork, Houston, SanFrancisco)
Weather
Weather <- list(Chicago=Chicago,
NewYork=NewYork,
Houston=Houston,
SanFrancisco=SanFrancisco)
weather[[3]]
Weather[[3]]
Chicago
apply(Chicago, 1, mean)
mean(Chicago["DaysWithPrecip", ])
apply(Chicago, 1, max)
apply(Chicago, 1, min)
apply(Chicago, 2, max)
Chicago
apply(Chicago, 2, min)
apply(Chicago, 2, min)
apply(Chicago, 1, mean)
apply(NewYork, 1, mean)
apply(Houston, 1, mean)
apply(SanFrancisco, 1, mean)
output <- NULL #prepare an empty vector
for(i in 1:5){
mean(Chicago[i,])
}
for(i in 1:5){
output[i] <- mean(Chicago[i,])
}
output
names(output) <- rownames(Chicago)
output
apply(Chicago, 1, mean)
?lapply
t(Chicago)
lapply(Weather, t)
list(t(Chicago), t(NewYork), t(Houston), t(SanFrancisco))
lapply(Weather, t) # list(t(Chicago), t(NewYork), t(Houston), t(SanFrancisco))
mynewlist <- lapply(Weather, t)
rbind(Chicago, NewRow=1:12)
lapply(Weather, rbind, NewRow=1:12)
?rowMeans
lapply(weather, rowMeans)
lapply(Weather, rowMeans)
Weather$Chicago[1,1]
Weather[[1]][1,1]
lapply(Weather, "[", 1, 1)
lapply(Weather, "[", 1, )
lapply(Weather, "[", ,3)
lapply(Weather, function(x) x[1,] )
lapply(Weather, function(x) x[5,] )
lapply(Weather, function(x) x[,12] )
lapply(Weather, function(z), z[1,]-z[2,])
lapply(Weather, function(z) z[1,]-z[2,])
lapply(Weather, function(z) round((z[1,]-z[2,])/z[2,]))
lapply(Weather, function(z) round((z[1,]-z[2,])/z[2,], 2))
lapply(Weather, "[", 1, 7)
sapply(Weather, "[", 1, 7)
lapply(Weather, "[", 1, 10:12)
sapply(Weather, "[", 1, 10:12)
typeof(sapply(Weather, "[", 1, 10:12))
lapply(Weather, rowMeans)
sapply(Weather, rowMeans)
round(sapply(Weather, rowMeans), 2)
sapply(Weather, function(z) round((z[1,]-z[2,])/z[2,], 2))
sapply(Weather, rowMeans, simplify=FALSE) #same as lapply
lapply(Weather, rowMeans)
apply(Chicago, 1, max)
lapply(Weather, apply, 1, max)
sapply(Weather, apply, 1, max)
lapply(Weather, function(x) apply(x, 1, max)) #same result as above
sapply(Weather, apply, 1, max)
sapply(Weather, apply, 1, min)
?which.max
which.max(Chicago[1,])
names(which.max(Chicago[1,]))
apply(Chicago, 1, function(x) names(which.max(x)))
sapply(Weather, function(y) apply(y, 1, function(x) names(which.max(x))))
df <- ?read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv",)
?read.csv
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv", row.names=1)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv")
head(leaver_df)
head(df)
df <- read.csv("C:/Users/Gaelan/Desktop/TOM/TOM files/HR Master 2016.csv", row.names=1)
leaver_df <- df[df$FT.Turnover.Indicator == 1 & df&Termination.Type == "Voluntary",]
leaver_df <- df[df$FT.Turnover.Indicator == 1 & df$Termination.Type == "Voluntary",]
head(leaver_df)
str(leaver_df)
as.POSIXct(df$Date.of.Birth, "Asia/Singapore")
as.POSIXct(df$Date.of.Birth, format="%d/%m/%Y")
str(leaver_df)
leaver_df$Date.of.Birth <- as.POSIXct(leaver_df$Date.of.Birth, format="%d/%m/%Y")
leaver_df$Original.Start.Date <- as.POSIXct(leaver_df$Original.Start.Date, format="%d/%m/%Y")
leaver_df$Recruit.Date <- as.POSIXct(leaver_df$Recruit.Date, format="%d/%m/%Y")
leaver_df$Termination.Date <- as.POSIXct(leaver_df$Termination.Date, format="%d/%m/%Y")
leaver_df$FirstDay <- as.POSIXct(leaver_df$FirstDay, format="%d/%m/%Y")
leaver_df$LastDay <- as.POSIXct(leaver_df$LastDay, format="%d/%m/%Y")
as.numeric(leaver_df$LastDay)
typeof(as.numeric(leaver_df$LastDay))
